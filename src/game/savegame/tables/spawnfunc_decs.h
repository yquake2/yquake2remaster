/*
 * Copyright (C) 1997-2001 Id Software, Inc.
 * Copyright (C) 2011 Yamagi Burmeister
 * Copyright (c) ZeniMax Media Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
 * 02111-1307, USA.
 *
 * =======================================================================
 *
 * Prototypes for every spawn function in the game.so.
 *
 * =======================================================================
 */

extern void SP_CreateCoopSpots(edict_t * self);
extern void SP_CreateUnnamedSpawn(edict_t * self);
extern void SP_FixCoopSpots(edict_t * self);
extern void SP_choose_cdtrack(edict_t *self);
extern void SP_dm_dball_ball(edict_t * self);
extern void SP_dm_dball_ball_start(edict_t * self);
extern void SP_dm_dball_goal(edict_t * self);
extern void SP_dm_dball_speed_change(edict_t * self);
extern void SP_dm_dball_team1_start(edict_t * self);
extern void SP_dm_dball_team2_start(edict_t * self);
extern void SP_dm_tag_token(edict_t * self);
extern void SP_env_fire ( edict_t * ent ) ;
extern void SP_func_areaportal ( edict_t * ent ) ;
extern void SP_func_button ( edict_t * ent ) ;
extern void SP_func_clock(edict_t * self);
extern void SP_func_conveyor(edict_t * self);
extern void SP_func_door ( edict_t * ent ) ;
extern void SP_func_door_rotating ( edict_t * ent ) ;
extern void SP_func_door_secret ( edict_t * ent ) ;
extern void SP_func_door_secret2 ( edict_t * ent ) ;
extern void SP_func_explosive(edict_t * self);
extern void SP_func_force_wall ( edict_t * ent ) ;
extern void SP_func_killbox ( edict_t * ent ) ;
extern void SP_func_object(edict_t * self);
extern void SP_func_plat ( edict_t * ent ) ;
extern void SP_func_plat2 ( edict_t * ent ) ;
extern void SP_func_rotating ( edict_t * ent ) ;
extern void SP_func_timer(edict_t * self);
extern void SP_func_train(edict_t * self);
extern void SP_func_wall(edict_t * self);
extern void SP_func_water(edict_t * self);
extern void SP_hint_path(edict_t * self);
extern void SP_info_notnull(edict_t * self);
extern void SP_info_null(edict_t * self);
extern void SP_info_player_coop(edict_t * self);
extern void SP_info_player_coop_lava(edict_t * self);
extern void SP_info_player_deathmatch(edict_t * self);
extern void SP_info_player_intermission ( edict_t * ent ) ;
extern void SP_info_player_start(edict_t * self);
extern void SP_info_teleport_destination(edict_t * self);
extern void SP_item_foodcube(edict_t * self);
extern void SP_item_health(edict_t * self);
extern void SP_item_health_half(edict_t * self);
extern void SP_item_health_full(edict_t * self);
extern void SP_item_health_large(edict_t * self);
extern void SP_item_health_mega(edict_t * self);
extern void SP_item_health_small(edict_t * self);
extern void SP_light(edict_t * self);
extern void SP_light_mine1 ( edict_t * ent ) ;
extern void SP_light_mine2 ( edict_t * ent ) ;
extern void SP_misc_actor(edict_t * self);
extern void SP_misc_amb4 ( edict_t * ent ) ;
extern void SP_misc_banner ( edict_t * ent ) ;
extern void SP_misc_bigviper ( edict_t * ent ) ;
extern void SP_misc_blackhole ( edict_t * ent ) ;
extern void SP_misc_crashviper ( edict_t * ent ) ;
extern void SP_misc_deadsoldier ( edict_t * ent ) ;
extern void SP_misc_easterchick ( edict_t * ent ) ;
extern void SP_misc_easterchick2 ( edict_t * ent ) ;
extern void SP_misc_eastertank ( edict_t * ent ) ;
extern void SP_misc_explobox(edict_t * self);
extern void SP_misc_gib_arm ( edict_t * ent ) ;
extern void SP_misc_gib_head ( edict_t * ent ) ;
extern void SP_misc_gib_leg ( edict_t * ent ) ;
extern void SP_misc_insane(edict_t * self);
extern void SP_misc_nuke ( edict_t * ent ) ;
extern void SP_misc_nuke_core ( edict_t * ent ) ;
extern void SP_misc_flare ( edict_t * ent ) ;
extern void SP_misc_model ( edict_t * ent ) ;
extern void SP_misc_player_mannequin ( edict_t * ent ) ;
extern void SP_misc_satellite_dish ( edict_t * ent ) ;
extern void SP_misc_strogg_ship ( edict_t * ent ) ;
extern void SP_misc_teleporter ( edict_t * ent ) ;
extern void SP_misc_teleporter_dest ( edict_t * ent ) ;
extern void SP_misc_transport ( edict_t * ent ) ;
extern void SP_misc_update_spawner ( edict_t * self ) ;
extern void SP_misc_viper ( edict_t * ent ) ;
extern void SP_misc_viper_bomb(edict_t * self);
extern void SP_misc_viper_missile(edict_t * self);
extern void SP_monster_arachnid(edict_t * self);
extern void SP_monster_army(edict_t * self);
extern void SP_monster_berserk(edict_t * self);
extern void SP_monster_boss2(edict_t * self);
extern void SP_monster_boss3_stand(edict_t * self);
extern void SP_monster_boss5(edict_t * self);
extern void SP_monster_brain(edict_t * self);
extern void SP_monster_carrier(edict_t * self);
extern void SP_monster_chick(edict_t * self);
extern void SP_monster_chick_heat(edict_t * self);
extern void SP_monster_commander_body(edict_t * self);
extern void SP_monster_demon(edict_t * self);
extern void SP_monster_dog(edict_t * self);
extern void SP_monster_enforcer(edict_t * self);
extern void SP_monster_rotfish(edict_t * self);
extern void SP_monster_fixbot(edict_t * self);
extern void SP_monster_flipper(edict_t * self);
extern void SP_monster_floater(edict_t * self);
extern void SP_monster_flyer(edict_t * self);
extern void SP_monster_gekk(edict_t * self);
extern void SP_monster_gladb(edict_t * self);
extern void SP_monster_gladiator(edict_t * self);
extern void SP_monster_guardian(edict_t * self);
extern void SP_monster_guncmdr(edict_t * self);
extern void SP_monster_gunner(edict_t * self);
extern void SP_monster_hknight(edict_t * self);
extern void SP_monster_hover(edict_t * self);
extern void SP_monster_infantry(edict_t * self);
extern void SP_monster_jorg(edict_t * self);
extern void SP_monster_kamikaze(edict_t * self);
extern void SP_monster_knight(edict_t * self);
extern void SP_monster_makron(edict_t * self);
extern void SP_monster_medic(edict_t * self);
extern void SP_monster_mutant(edict_t * self);
extern void SP_monster_ogre(edict_t * self);
extern void SP_monster_parasite(edict_t * self);
extern void SP_monster_shalrath(edict_t * self);
extern void SP_monster_shambler(edict_t* self);
extern void SP_monster_soldier(edict_t * self);
extern void SP_monster_soldier_h(edict_t * self);
extern void SP_monster_soldier_hypergun(edict_t * self);
extern void SP_monster_soldier_lasergun(edict_t * self);
extern void SP_monster_soldier_light(edict_t * self);
extern void SP_monster_soldier_ripper(edict_t * self);
extern void SP_monster_soldier_ss(edict_t * self);
extern void SP_monster_soldier_x(edict_t * self);
extern void SP_monster_stalker(edict_t * self);
extern void SP_monster_supertank(edict_t * self);
extern void SP_monster_tank(edict_t * self);
extern void SP_monster_tarbaby(edict_t * self);
extern void SP_monster_turret(edict_t * self);
extern void SP_monster_widow(edict_t * self);
extern void SP_monster_widow2(edict_t * self);
extern void SP_monster_wizard(edict_t * self);
extern void SP_monster_zombie(edict_t * self);
extern void SP_npc_timeminder(edict_t * self);
extern void SP_object_big_fire ( edict_t * ent ) ;
extern void SP_object_campfire ( edict_t * ent ) ;
extern void SP_object_flame1 ( edict_t * ent ) ;
extern void SP_object_repair ( edict_t * ent ) ;
extern void SP_obj_banner(edict_t * self);
extern void SP_obj_banneronpole(edict_t * self);
extern void SP_obj_barrel(edict_t * self);
extern void SP_object_barrel(edict_t * self);
extern void SP_obj_broom(edict_t * self);
extern void SP_path_corner(edict_t * self);
extern void SP_point_combat(edict_t * self);
extern void SP_quake_light_flame(edict_t * self);
extern void SP_rotating_light(edict_t * self);
extern void SP_target_actor(edict_t * self);
extern void SP_target_anger(edict_t * self);
extern void SP_target_autosave(edict_t * self);
extern void SP_target_blacklight ( edict_t * ent ) ;
extern void SP_target_blaster(edict_t * self);
extern void SP_target_camera(edict_t* self);
extern void SP_target_changelevel ( edict_t * ent ) ;
extern void SP_target_character(edict_t * self);
extern void SP_target_crosslevel_target(edict_t * self);
extern void SP_target_crosslevel_trigger(edict_t * self);
extern void SP_target_earthquake(edict_t * self);
extern void SP_target_explosion ( edict_t * ent ) ;
extern void SP_target_goal ( edict_t * ent ) ;
extern void SP_target_gravity (edict_t * self);
extern void SP_target_help ( edict_t * ent ) ;
extern void SP_target_killplayers(edict_t * self);
extern void SP_target_laser(edict_t * self);
extern void SP_target_light(edict_t *self);
extern void SP_target_lightramp(edict_t * self);
extern void SP_target_mal_laser(edict_t * self);
extern void SP_target_music(edict_t * self);
extern void SP_target_orb ( edict_t * ent ) ;
extern void SP_target_secret ( edict_t * ent ) ;
extern void SP_target_sky(edict_t * self);
extern void SP_target_soundfx(edict_t * self);
extern void SP_target_spawner(edict_t * self);
extern void SP_target_speaker ( edict_t * ent ) ;
extern void SP_target_splash(edict_t * self);
extern void SP_target_steam(edict_t * self);
extern void SP_target_string(edict_t * self);
extern void SP_target_temp_entity ( edict_t * ent ) ;
extern void SP_trigger_always ( edict_t * ent ) ;
extern void SP_trigger_counter(edict_t * self);
extern void SP_trigger_disguise(edict_t * self);
extern void SP_trigger_elevator(edict_t * self);
extern void SP_trigger_flashlight(edict_t * self);
extern void SP_trigger_fog(edict_t * self);
extern void SP_trigger_fogdensity(edict_t * self);
extern void SP_trigger_gravity(edict_t * self);
extern void SP_trigger_hurt(edict_t * self);
extern void SP_trigger_key(edict_t * self);
extern void SP_trigger_mission_give(edict_t * self);
extern void SP_trigger_mission_take(edict_t * self);
extern void SP_trigger_monsterjump(edict_t * self);
extern void SP_trigger_multiple ( edict_t * ent ) ;
extern void SP_trigger_once ( edict_t * ent ) ;
extern void SP_trigger_push(edict_t * self);
extern void SP_trigger_relay(edict_t * self);
extern void SP_trigger_teleport(edict_t * self);
extern void SP_turret_base(edict_t * self);
extern void SP_turret_breach(edict_t * self);
extern void SP_turret_driver(edict_t * self);
extern void SP_turret_invisible_brain(edict_t * self);
extern void SP_viewthing ( edict_t * ent ) ;
extern void SP_worldspawn ( edict_t * ent ) ;
extern void SP_xatrix_item(edict_t * self);
extern void SP_obj_banner(edict_t * self);
extern void SP_obj_banneronpole(edict_t * self);
extern void SP_quake_light_flame(edict_t * self);
extern void SP_object_flame1(edict_t * self);
extern void SP_obj_barrel(edict_t * self);
extern void SP_object_barrel(edict_t * self);
extern void SP_obj_broom(edict_t * self);
extern void SP_obj_chair1(edict_t * self);
extern void SP_obj_chair2(edict_t * self);
extern void SP_obj_chair3(edict_t * self);
extern void SP_obj_chest1(edict_t * self);
extern void SP_obj_chest2(edict_t * self);
extern void SP_obj_chest3(edict_t * self);
extern void SP_obj_cog1(edict_t * self);
extern void SP_obj_corpse1(edict_t * self);
extern void SP_obj_corpse2(edict_t * self);
extern void SP_obj_dying_elf(edict_t * self);
extern void SP_obj_sign1(edict_t * self);
extern void SP_obj_sign4(edict_t * self);
extern void SP_obj_stalagmite1(edict_t * self);
extern void SP_obj_stalagmite2(edict_t * self);
extern void SP_obj_stalagmite3(edict_t * self);
extern void SP_obj_statue_corvus(edict_t * self);
extern void SP_obj_statue_dolphin1(edict_t * self);
extern void SP_obj_statue_dolphin2(edict_t * self);
extern void SP_obj_statue_dolphin3(edict_t * self);
extern void SP_obj_statue_dolphin4(edict_t * self);
extern void SP_obj_statue_guardian(edict_t * self);
extern void SP_obj_table1(edict_t * self);
extern void SP_obj_table2(edict_t * self);
extern void SP_obj_throne(edict_t * self);
extern void SP_obj_kettle(edict_t * self);
extern void SP_obj_cauldron(edict_t * self);
extern void SP_obj_firepot(edict_t * self);
extern void SP_obj_statue_duckbill1(edict_t * self);
extern void SP_obj_statue_duckbill2(edict_t * self);
extern void SP_obj_seasonglobe(edict_t * self);
extern void SP_obj_stein(edict_t * self);
extern void SP_obj_scroll(edict_t * self);
extern void SP_obj_fountain_fish(edict_t * self);
extern void SP_obj_statue_boulderfish(edict_t * self);
extern void SP_obj_pottedplant(edict_t * self);
extern void SP_obj_plant1(edict_t * self);
extern void SP_obj_plant2(edict_t * self);
extern void SP_obj_plant3(edict_t * self);
extern void SP_obj_treetop(edict_t * self);
extern void SP_obj_tree(edict_t * self);
extern void SP_obj_tree2(edict_t * self);
extern void SP_obj_tree3(edict_t * self);
extern void SP_obj_treetall(edict_t * self);
extern void SP_obj_treefallen(edict_t * self);
extern void SP_obj_shovel(edict_t * self);
extern void SP_obj_woodpile(edict_t * self);
extern void SP_obj_fishtrap(edict_t * self);
extern void SP_obj_bench(edict_t * self);
extern void SP_obj_bucket(edict_t * self);
extern void SP_obj_ropechain(edict_t * self);
extern void SP_obj_wheelbarrow(edict_t * self);
extern void SP_obj_wheelbarrowdamaged(edict_t * self);
extern void SP_obj_urn(edict_t * self);
extern void SP_obj_bigcrystal(edict_t * self);
extern void SP_obj_moss1(edict_t * self);
extern void SP_obj_moss2(edict_t * self);
extern void SP_obj_moss3(edict_t * self);
extern void SP_obj_moss4(edict_t * self);
extern void SP_obj_moss5(edict_t * self);
extern void SP_obj_floor_candelabrum(edict_t * self);
extern void SP_obj_statue_dragonhead(edict_t * self);
extern void SP_obj_statue_dragon(edict_t * self);
extern void SP_obj_flagonpole(edict_t * self);
extern void SP_obj_lever1(edict_t * self);
extern void SP_obj_lever2(edict_t * self);
extern void SP_obj_lever3(edict_t * self);
extern void SP_obj_bush1(edict_t * self);
extern void SP_obj_bush2(edict_t * self);
extern void SP_obj_cactus(edict_t * self);
extern void SP_obj_cactus3(edict_t * self);
extern void SP_obj_cactus4(edict_t * self);
extern void SP_obj_basket(edict_t * self);
extern void SP_obj_claybowl(edict_t * self);
extern void SP_obj_clayjar(edict_t * self);
extern void SP_obj_gorgonbones(edict_t * self);
extern void SP_obj_grass(edict_t * self);
extern void SP_obj_swampflat_top(edict_t * self);
extern void SP_obj_swampflat_bottom(edict_t * self);
extern void SP_obj_treestump(edict_t * self);
extern void SP_obj_jawbone(edict_t * self);
extern void SP_obj_barrel_metal(edict_t * self);
extern void SP_obj_barrel_exploding(edict_t * self);
extern void SP_obj_barrel_indestructible(edict_t * self);
extern void SP_obj_barrel_explosive(edict_t * self);
extern void SP_obj_gascan(edict_t * self);
extern void SP_obj_pipe1(edict_t * self);
extern void SP_obj_pipe2(edict_t * self);
extern void SP_obj_pipewheel(edict_t * self);
extern void SP_obj_minecart(edict_t * self);
extern void SP_obj_minecart2(edict_t * self);
extern void SP_obj_minecart3(edict_t * self);
extern void SP_obj_andwallhanging(edict_t * self);
extern void SP_obj_pick(edict_t * self);
extern void SP_obj_metalchunk1(edict_t * self);
extern void SP_obj_metalchunk2(edict_t * self);
extern void SP_obj_metalchunk3(edict_t * self);
extern void SP_obj_rocks1(edict_t * self);
extern void SP_obj_rocks2(edict_t * self);
extern void SP_obj_hivepriestessssymbol(edict_t * self);
extern void SP_obj_queenthrone(edict_t * self);
extern void SP_obj_queenchair(edict_t * self);
extern void SP_obj_shrine(edict_t * self);
extern void SP_obj_larvaegg(edict_t * self);
extern void SP_obj_larvabrokenegg(edict_t * self);
extern void SP_obj_cocoon(edict_t * self);
extern void SP_obj_cocoonopen(edict_t * self);
extern void SP_obj_venusflytrap(edict_t * self);
extern void SP_obj_statue_techeckriktomb(edict_t * self);
extern void SP_obj_statue_techeckrikright(edict_t * self);
extern void SP_obj_statue_techeckrikleft(edict_t * self);
extern void SP_obj_spellbook(edict_t * self);
extern void SP_obj_skullpole(edict_t * self);
extern void SP_obj_pot1(edict_t * self);
extern void SP_obj_pot2(edict_t * self);
extern void SP_obj_bottle1(edict_t * self);
extern void SP_obj_jug1(edict_t * self);
extern void SP_obj_torture_table(edict_t * self);
extern void SP_obj_torture_wallring(edict_t * self);
extern void SP_obj_statue_tchecktrik_bust(edict_t * self);
extern void SP_obj_statue_sithraguard(edict_t * self);
extern void SP_obj_torture_ironmaiden(edict_t * self);
extern void SP_obj_torture_rack(edict_t * self);
extern void SP_obj_torture_bed(edict_t * self);
extern void SP_obj_statue_saraphbust(edict_t * self);
extern void SP_obj_biotank(edict_t * self);
extern void SP_obj_tapper(edict_t * self);
extern void SP_obj_wallringplaque(edict_t * self);
extern void SP_obj_hangingdude(edict_t * self);
extern void SP_obj_frypan(edict_t * self);
extern void SP_obj_eggpan(edict_t * self);
extern void SP_obj_nest(edict_t * self);
extern void SP_obj_choppeddude(edict_t * self);
extern void SP_obj_lab_parts_container(edict_t * self);
extern void SP_obj_eyeball_jar(edict_t * self);
extern void SP_obj_lab_tray(edict_t * self);
extern void SP_obj_hanging_ogle(edict_t * self);
extern void SP_obj_ring_plaque2(edict_t * self);
extern void SP_obj_statue_sariph(edict_t * self);
extern void SP_obj_pushcart(edict_t * self);
extern void SP_obj_bookopen(edict_t * self);
extern void SP_obj_bookclosed(edict_t * self);
extern void SP_obj_web(edict_t * self);
extern void SP_obj_larva(edict_t * self);
extern void SP_obj_bloodsplat(edict_t * self);
extern void SP_object_big_fire(edict_t * self);
extern void SP_object_campfire(edict_t * self);
